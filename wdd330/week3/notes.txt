Chapter 5 Summary
Objects are a collection of key-value pairs placed inside curly braces{}.

Objects have properties that can be any JavaScript value. If it’s a function, it’s known as amethod.

An object’s properties and methods can be accessed using either dot notation or square bracket notation.

Objects are mutable, which means their properties and methods can be changed or removed.

Objects can be used as parameters to functions, which allows arguments to be entered in any order, or omitted.

Nested objects can be created by placing objects inside objects.

JSON is a portable data format that uses JavaScript object literals to exchange information.

TheMathobject gives access to a number of mathematical constants.

TheMathobject can be used to perform mathematical calculations.

TheDateobject can be used to create date objects.

Once you’ve created aDateobject, you can use the getter methods to access information about that date.

Once you’ve created aDateobject, setter methods can be used to change information about that date.

TheRegexobject can be used to create regular expressions.

Now we’ve reached the end of the first part of the book, you should have a good grasp of the JavaScript 
programming language basics. But JavaScript was originally designed to be used in the browser, so in the 
next chapter we’ll look at how to use JavaScript to interact with web pages.


Chapter 6 Summary
The Document Object Model is a way of representing a page of HTML as a tree of nodes.
Thedocument.getElementById(),document.getElementsByClassName(),document.getElementsByTagNames()anddocument.querySelector()can be used to access elements on a page.

TheparentNode(),previousSibling(),nextSibling(),childNodes()andchildren()methods can be used to navigate around the DOM tree.

An element’s attributes can be accessed using thegetAttribute()method, and updated using thesetAttribute()method.

ThecreateElement()andcreateTextNode()methods can be used to create dynamic markup on the fly.

Markup can be added to the page using theappendChild()andinsertBefore()methods.

Elements can be replaced using thereplaceChild()method, and removed using theremoveChild()method.

TheinnerHTMLproperty can be used to insert raw HTML directly into the DOM.

The CSS properties of an element can be changed by accessing thestyleproperty.

Now we’ve learned how to navigate and dynamically update the markup of a web page, it’s time to start interacting with it. In the next chapter we’ll be covering a fundamental part of the JavaScript language: events.

Chapter 7 Summary
Events occur when a user interacts with a web page.

An event listener is attached to an element, then invokes a callback function when the event occurs.

The event object is passed to the callback function as an argument, and contains lots of properties and methods relating to the event.

There are many types of event, including mouse events, keyboard events, and touch events.

You can remove an event using theremoveEventListenermethod.

The default behavior of elements can be prevented using thepreventDefault()function.

Event propagation is the order the events fire on each element.

Event delegation is when an event listener is added to a parent element to capture events that happen to its children elements.

In the next chapter, we’ll look at how we can use forms to enter information into the browser, and use events to process that information.